<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="aris">
    <xacro:property name="infty" value="${1e9}"/>
    <xacro:property name="epsilon" value="${1e-9}"/>

    <xacro:macro name="tiny_inertia">
        <inertial>
            <mass value="${epsilon}"/>
            <inertia ixx="${epsilon}" ixy="0" ixz="0"
                     iyy="${epsilon}" iyz="0" izz="${epsilon}"/>
        </inertial>
    </xacro:macro>

    <link name="body">
        <visual>
            <geometry>
                <!-- All meshes are in mm -->
                <mesh filename="package://bmb_description/meshes/body.stl"
                      scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <inertial>
            <mass value="3.068"/>
            <inertia ixx="12.327" ixy="-3.07" ixz="0.739"
                     iyy="1.711" iyz="-2.789" izz="12.659"/>
        </inertial>
        <collision>
            <geometry>
                <box size="1.5 2.1 0.4"/>
            </geometry>
        </collision>
        <gazebo>
            <!-- Turn off gravity since the aris_control plugin will apply it -->
            <gravity>0</gravity>
        </gazebo>
    </link>

    <!-- Propeller -->
    <link name="propeller">
        <xacro:tiny_inertia/>
        <visual>
            <geometry>
                <mesh filename="package://bmb_description/meshes/propeller.stl"
                      scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <origin xyz="-0.4244 0 -0.1638" rpy="0 0 0"/>
    </link>
    <joint name="body_to_propeller" type="continuous">
        <parent link="body"/>
        <child link="propeller"/>
        <origin xyz="0.4244 0 0.1638" rpy="0 0 0"/>
        <axis xyz="1 0 0"/>
    </joint>

    <!-- Left Aileron -->
    <!-- TODO: use xacro macro for left and right aileron -->
    <link name="left_aileron">
        <xacro:tiny_inertia/>
        <visual>
            <geometry>
                <mesh filename="package://bmb_description/meshes/left_aileron.stl"
                      scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <origin xyz="${-1.45 + 0.2649} 3.7 ${1.5 - 0.1714}" rpy="0.05 0 -0.12"/>
    </link>
    <joint name="body_to_left_aileron" type="revolute">
        <parent link="body"/>
        <child link="left_aileron"/>
        <origin xyz="-0.2649 0 0.1714" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit lower="${radians(-30)}" upper="${radians(30)}" velocity="${infty}" effort="${infty}"/>
    </joint>

    <!-- Right Aileron -->
    <link name="right_aileron">
        <xacro:tiny_inertia/>
        <visual>
            <geometry>
                <mesh filename="package://bmb_description/meshes/right_aileron.stl"
                      scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <origin xyz="${-1.45 + 0.2649} -3.7 ${1.5 - 0.1714}" rpy="-0.05 0 0.12"/>
    </link>
    <joint name="body_to_right_aileron" type="revolute">
        <parent link="body"/>
        <child link="right_aileron"/>
        <origin xyz="-0.2649 0 0.1714" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit lower="${radians(-30)}" upper="${radians(30)}" velocity="${infty}" effort="${infty}"/>
    </joint>

    <!-- Elevator -->
    <link name="elevator">
        <xacro:tiny_inertia/>
        <visual>
            <geometry>
                <mesh filename="package://bmb_description/meshes/elevator.stl"
                      scale="0.001 0.001 0.001"/>
            </geometry>
        </visual>
        <origin xyz="${-5.55 + 1.2927} 0 ${0.57 - 0.1024}" rpy="0 0 0"/>
    </link>
    <joint name="body_to_elevator" type="revolute">
        <parent link="body"/>
        <child link="elevator"/>
        <origin xyz="-1.2927 0 0.1024" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit lower="${radians(-30)}" upper="${radians(30)}" velocity="${infty}" effort="${infty}"/>
    </joint>

    <gazebo>
        <plugin name="aris_control" filename="libaris_control_plugin.so">
            <base_link>body</base_link>
            <propeller>body_to_propeller</propeller>
            <left_aileron>body_to_left_aileron</left_aileron>
            <right_aileron>body_to_right_aileron</right_aileron>
            <elevator>body_to_elevator</elevator>
        </plugin>
    </gazebo>
</robot>
